import { supabaseToken } from "/src/lib/supabase.ts";
const nowPlaying = async () => {
  const response = await fetch("https://syvkefpljdcoricvmqcy.supabase.co/functions/v1/super-handler", {
    method: "POST",
    body: JSON.stringify({
      action: "now-playing"
    }),
    headers: {
      "Authorization": `Bearer ${supabaseToken}`,
      "Content-Type": "application/json"
    }
  });
  const data = await response.json();
  console.log(data);
};
document.addEventListener("DOMContentLoaded", () => {
  nowPlaying();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5vd1BsYXlpbmcuYXN0cm8iXSwic291cmNlc0NvbnRlbnQiOlsiLS0tXG4vLyBUaGlzIGNvbXBvbmVudCB3aWxsIGJlIGNsaWVudC1zaWRlIHJlbmRlcmVkIHRvIGhhbmRsZSBTcG90aWZ5IEFQSSBjYWxsc1xuLy8gaW1wb3J0IHsgc3VwYWJhc2VUb2tlbiB9IGZyb20gJy4uL2xpYi9zdXBhYmFzZSc7XG4tLS1cblxuPGRpdiBpZD1cIm5vdy1wbGF5aW5nXCIgY2xhc3M9XCJmaXhlZCBib3R0b20tNCByaWdodC00IGJnLXdoaXRlIGJvcmRlciBib3JkZXItWyNGRUU5NkFdLzMwIHJvdW5kZWQtbGcgc2hhZG93LWxnIHAtNCBtYXgtdy1zbSBoaWRkZW5cIj5cbiAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtM1wiPlxuICAgIDxkaXYgaWQ9XCJhbGJ1bS1hcnRcIiBjbGFzcz1cInctMTIgaC0xMiBiZy1ncmF5LTIwMCByb3VuZGVkIGZsZXgtc2hyaW5rLTBcIj5cbiAgICAgIDxpbWcgaWQ9XCJhbGJ1bS1pbWFnZVwiIHNyYz1cIlwiIGFsdD1cIkFsYnVtIEFydFwiIGNsYXNzPVwidy1mdWxsIGgtZnVsbCByb3VuZGVkIG9iamVjdC1jb3ZlciBoaWRkZW5cIj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleC0xIG1pbi13LTBcIj5cbiAgICAgIDxkaXYgaWQ9XCJ0cmFjay1pbmZvXCIgY2xhc3M9XCJ0ZXh0LXNtXCI+XG4gICAgICAgIDxwIGlkPVwidHJhY2stbmFtZVwiIGNsYXNzPVwiZm9udC1tZWRpdW0gdGV4dC1bIzA2NDE2MV0gdHJ1bmNhdGVcIj5Mb2FkaW5nLi4uPC9wPlxuICAgICAgICA8cCBpZD1cImFydGlzdC1uYW1lXCIgY2xhc3M9XCJ0ZXh0LVsjMDY0MTYxXS83MCB0cnVuY2F0ZVwiPkxvYWRpbmcuLi48L3A+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgbXQtMVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC0xIGJnLWdyYXktMjAwIHJvdW5kZWQtZnVsbCBoLTFcIj5cbiAgICAgICAgICA8ZGl2IGlkPVwicHJvZ3Jlc3MtYmFyXCIgY2xhc3M9XCJiZy1bI0ZFRTk2QV0gaC0xIHJvdW5kZWQtZnVsbCB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0xMDAwXCIgc3R5bGU9XCJ3aWR0aDogMCVcIj48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxzcGFuIGlkPVwidGltZS1kaXNwbGF5XCIgY2xhc3M9XCJ0ZXh0LXhzIHRleHQtWyMwNjQxNjFdLzYwXCI+MDowMCAvIDA6MDA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIgc3BhY2UteS0xXCI+XG4gICAgICA8ZGl2IGlkPVwicGxheS1wYXVzZS1idG5cIiBjbGFzcz1cInctNiBoLTYgYmctWyNGRUU5NkFdIHJvdW5kZWQtZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBjdXJzb3ItcG9pbnRlciBob3ZlcjpiZy1bI0ZFRTk2QV0vODAgdHJhbnNpdGlvbi1jb2xvcnNcIj5cbiAgICAgICAgPHN2ZyBpZD1cInBsYXktaWNvblwiIGNsYXNzPVwidy0zIGgtMyB0ZXh0LVsjMDY0MTYxXSBoaWRkZW5cIiBmaWxsPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyMCAyMFwiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNOCA1djEwbDgtNS04LTV6XCIvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPHN2ZyBpZD1cInBhdXNlLWljb25cIiBjbGFzcz1cInctMyBoLTMgdGV4dC1bIzA2NDE2MV1cIiBmaWxsPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyMCAyMFwiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNNiA0aDJ2MTJINlY0em02IDBoMnYxMmgtMlY0elwiLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJzcG90aWZ5LWxvZ29cIiBjbGFzcz1cInctNCBoLTRcIj5cbiAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIiMxREI5NTRcIj5cbiAgICAgICAgICA8cGF0aCBkPVwiTTEyIDBDNS40IDAgMCA1LjQgMCAxMnM1LjQgMTIgMTIgMTIgMTItNS40IDEyLTEyUzE4LjY2IDAgMTIgMHptNS41MjEgMTcuMzRjLS4yNC4zNTktLjY2LjQ4LTEuMDIxLjI0LTIuODItMS43NC02LjM2LTIuMTAxLTEwLjU2MS0xLjE0MS0uNDE4LjEyMi0uNzc5LS4xNzktLjg5OS0uNTM5LS4xMi0uNDIxLjE4LS43OC41NC0uOSA0LjU2LTEuMDIxIDguNTItLjYgMTEuNjQgMS4zMi40Mi4xOC40NzkuNjU5LjMwMSAxLjAyem0xLjQ0LTMuM2MtLjMwMS40Mi0uODQxLjYtMS4yNjIuMy0zLjIzOS0xLjk4LTguMTU5LTIuNTgtMTEuOTM5LTEuMzgtLjQ3OS4xMi0xLjAyLS4xMi0xLjE0LS42LS4xMi0uNDguMTItMS4wMjEuNi0xLjE0MUM5LjYgOS45IDE1IDEwLjU2MSAxOC43MiAxMi44NGMuMzYxLjE4MS41NC43OC4yNDEgMS4yem0uMTItMy4zNkMxNS4yNCA4LjQgOC44MiA4LjE2IDUuMTYgOS4zMDFjLS42LjE3OS0xLjItLjE4MS0xLjM4LS43MjEtLjE4LS42MDEuMTgtMS4yLjcyLTEuMzgxIDQuMjYtMS4yNiAxMS4yOC0xLjAyIDE1LjcyMSAxLjYyMS41MzkuMy43MTkgMS4wMi40MTkgMS41Ni0uMjk5LjQyMS0xLjAyLjU5OS0xLjU1OS4zelwiLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IHsgc3VwYWJhc2VUb2tlbiB9IGZyb20gJy4uL2xpYi9zdXBhYmFzZSc7XG4gIFxuICBjb25zdCBub3dQbGF5aW5nID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL3N5dmtlZnBsamRjb3JpY3ZtcWN5LnN1cGFiYXNlLmNvL2Z1bmN0aW9ucy92MS9zdXBlci1oYW5kbGVyJyx7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgYWN0aW9uOiAnbm93LXBsYXlpbmcnXG4gICAgfSksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3N1cGFiYXNlVG9rZW59YCxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gIH1cblxuICAvLyBJbml0aWFsaXplIHdoZW4gRE9NIGlzIGxvYWRlZFxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIG5vd1BsYXlpbmcoKTtcblxuICAgIFxuICB9KTtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gICNub3ctcGxheWluZyB7XG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45NSk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTQsIDIzMywgMTA2LCAwLjMpO1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICB9XG5cbiAgI3Byb2dyZXNzLWJhciB7XG4gICAgdHJhbnNpdGlvbjogd2lkdGggMXMgbGluZWFyO1xuICB9XG5cbiAgI3BsYXktcGF1c2UtYnRuOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICB9XG48L3N0eWxlPiJdLCJtYXBwaW5ncyI6IkFBeUNFLFNBQVMscUJBQXFCO0FBRTlCLE1BQU0sYUFBYSxZQUFZO0FBQy9CLFFBQU0sV0FBVyxNQUFNLE1BQU0sdUVBQXNFO0lBQ2pHLFFBQVE7SUFDUixNQUFNLEtBQUssVUFBVTtNQUNuQixRQUFRO0lBQ1YsQ0FBQztJQUNDLFNBQVM7TUFDUCxpQkFBaUIsVUFBVSxhQUFhO01BQ3hDLGdCQUFnQjtJQUNsQjtFQUNGLENBQUM7QUFDRCxRQUFNLE9BQU8sTUFBTSxTQUFTLEtBQUs7QUFDakMsVUFBUSxJQUFJLElBQUk7QUFDbEI7QUFHQSxTQUFTLGlCQUFpQixvQkFBb0IsTUFBTTtBQUNsRCxhQUFXO0FBR2IsQ0FBQzsiLCJuYW1lcyI6W119